#version 450 core 

in vec3 fragPos;
in vec3 fragNormal;
in vec2 fragTexCoord;
in vec4 mWorldPos;

out vec4 color;

uniform vec3 camPos;
uniform sampler2D tex;
uniform samplerCube skybox;

uniform float currentTime;

uniform float ambientStr = 0.05f;
uniform vec3 ambientColor = vec3(1.0f, 1.0f, 1.0f);

uniform vec3 lightColor = vec3(1.0f, 1.0f, 1.0f);
uniform vec3 lightPos = vec3(-2.0f, 6.0f, 3.0f);

void main()
{
	// Ambient
	vec3 ambient = ambientStr * ambientColor;

	// Light Direction
	vec3 norm = normalize(fragNormal);
	vec3 lightDir = normalize(fragPos - lightPos);

	// Diffuse Coloring
	float diffuseStr = max(dot(norm, -lightDir), 0.0f);
	vec3 diffuse = diffuseStr * lightColor;

	color = vec4(ambient + diffuse, 1.0f) * (texture(tex, fragTexCoord));

	float d = distance(mWorldPos.xyz, camPos); 
	float lerp = (d - 5.0f)/50.f; 
	lerp = clamp(lerp, 0.0, 1.0);
	vec4 vFogColor = vec4(0.5f, 0.5f, 0.5f, 1.0f);

	color = mix(color, vFogColor, lerp);
}
